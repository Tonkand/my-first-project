import pandas as pd
import re
import requests
from difflib import SequenceMatcher

# 下載 RxNorm 顯示名稱列表（含複方藥）
def fetch_rxnorm_display_names():
    url = "https://rxnav.nlm.nih.gov/REST/displaynames.json"
    resp = requests.get(url)
    if resp.status_code == 200:
        return resp.json().get("displayTermsList", {}).get("term", [])
    else:
        print("⚠️ 無法連接 RxNorm API")
        return []

# 清洗藥名：去除說明括號、附加縮寫等，但保留化學結構
def clean_drug_name(name):
    name = re.sub(r'(\s*\([^()]{2,50}\))*\s*$', '', name)  # 去除末尾括號
    name = re.sub(r'\b(N\.E\.C|NEC|UPS|USP|BP|NF)\b\.?', '', name, flags=re.IGNORECASE)  # 去除縮寫
    name = re.sub(r'\s{2,}', ' ', name)  # 多餘空格
    return name.strip()

# fuzzy matching，找最接近的 RxNorm 名稱
def get_best_match(name, rxnames, threshold=0.7):
    def similarity(a, b):
        return SequenceMatcher(None, a.lower(), b.lower()).ratio()
    scores = [(rx, similarity(name, rx)) for rx in rxnames]
    scores = sorted(scores, key=lambda x: x[1], reverse=True)
    return scores[0][0] if scores and scores[0][1] >= threshold else ""

# 主流程
def correct_drug_names(drug_list):
    rxnorm_names = fetch_rxnorm_display_names()
    df = pd.DataFrame({'original': drug_list})
    df['cleaned'] = df['original'].apply(clean_drug_name)
    df['suggested_correction'] = df['cleaned'].apply(lambda x: get_best_match(x, rxnorm_names))
    return df[df['suggested_correction'] != ""]

# 測試資料（你可以換成自己的 txt/csv 讀入）
drug_list = [
    "DL-Methionine (Not for Infant Foods)(protein)",
    "2(3H)-furanone dihydro (sedative)",
    "Tranquilizer N.E.C",
    "amoxicillin clavulante (oral)(tablet)",
    "Vitamin C (Immune Support)",
    "antibiotic N.E.C (not pediatric)",
    "Aspirin UPS",
    "Paracetamol USP (pain relief)",
    "ibuprfen",
    "omeprazol",
    "acetaminophen codeine (Tablet)",
]

# 執行
df_result = correct_drug_names(drug_list)
