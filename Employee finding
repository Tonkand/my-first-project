import spacy

# 加载英文模型
nlp = spacy.load("en_core_web_sm")

# 员工相关词汇
employee_terms = {"employee", "employees", "staff", "personnel", "headcount", "workforce"}

def find_employee_numbers(text):
    doc = nlp(text)
    results = []

    for i, token in enumerate(doc):
        # 找到关键词
        if token.lemma_.lower() in employee_terms:
            # 搜索附近5个词以内的数字
            for j in range(max(0, i-5), min(len(doc), i+6)):
                if doc[j].like_num:
                    try:
                        number = int(doc[j].text.replace(",", ""))
                        results.append({
                            "term": token.text,
                            "number": number,
                            "context": doc[max(0, j-3):min(len(doc), j+4)].text
                        })
                    except ValueError:
                        continue
    return results

# 示例文本
text = """
We currently employ 120 full-time staff and 30 part-time employees.
Our total workforce is about 150. The company had 98 employees in 2020.
Only 5 people manage the HR department.
"""

employee_data = find_employee_numbers(text)
for item in employee_data:
    print(item)



######
import spacy

# 加载spaCy模型
nlp = spacy.load("en_core_web_sm")

# 员工相关词汇（你可以继续扩展）
employee_terms = {"employee", "employees", "staff", "personnel", "headcount", "workforce"}

def find_employee_numbers(text, max_distance=10):
    doc = nlp(text)
    results = []

    # 找出所有数字和员工相关词的位置
    number_indices = [(i, token) for i, token in enumerate(doc) if token.like_num]
    employee_indices = [(i, token) for i, token in enumerate(doc) if token.lemma_.lower() in employee_terms]

    # 遍历两者组合，判断距离
    for num_idx, num_token in number_indices:
        for emp_idx, emp_token in employee_indices:
            if abs(num_idx - emp_idx) <= max_distance:
                try:
                    number = int(num_token.text.replace(",", ""))
                    context_window = doc[max(0, min(num_idx, emp_idx)-3): max(num_idx, emp_idx)+4]
                    results.append({
                        "term": emp_token.text,
                        "number": number,
                        "context": context_window.text
                    })
                except ValueError:
                    continue
    return results

# 示例文本
text = """
We currently employ 120 full-time staff and 30 part-time employees.
In 2020, the total number of employees working in the company was 98.
The workforce is projected to grow to 150 next year.
Only 5 people are in HR.
"""

# 调用函数
employee_data = find_employee_numbers(text)
for item in employee_data:
    print(item)
